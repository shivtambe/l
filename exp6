6(a) Lex program to count the numbers of comment lines in a given C program. Also eliminate
them and copy the resulting program into separate file.
***************************************************************************************
%{
#include<stdio.h>
int i=0;
%}
id [a-zA-Z0-9 \n\t]*
%%
"/*"{id}"*/"
{i++;}
%%
main()
{
system("clear");
FILE *fp;
fp=fopen("abc.c","r");
yyin=fp;
yylex();
printf("Number of Comment Lines= %d\n",i);
}
yywrap()
{}
Supporting abc.c file:
/*This is a C Program*/
main()
{
int x=4; /*Declaration of x*/
int y=7,z; /*Declaration of y and z*/
z=x+y;
printf("ans= %d",z);
}
Execution:
[root@cse1bldea ssw]# lex 1b.lex
[root@cse1bldea ssw]# cc lex.yy.c
[root@cse1bldea ssw]# ./a.out
BLLDEACET/LM/CS/18CSL66
Page 20SYSTEM SOFTWARE LABARATORY. (18CSL66)
Output:
main()
{
int x=4;
int y=7,z;
z=x+y;
printf("ans= %d",z);
}
Number of Comment Lines= 3
BLLDEACET/LM/CS/18CSL66
Page 21SYSTEM SOFTWARE LABARATORY. (18CSL66)

6(b) Write YACC program to recognize valid identifier, operators and keywords in the given text (C
program) file.
***************************************************************************************
Lex File
%{
#include <stdio.h>
#include "y.tab.h"
extern yylval;
%}
%%
[ \t] ;
[+|-|*|/|=|<|>] {printf("operator is %s\n",yytext);return OP;}
[0-9]+ {yylval = atoi(yytext); printf("numbers is %d\n",yylval); return DIGIT;}
int|char|bool|float|void|for|do|while|if|else|return|void {printf("keyword is
%s\n",yytext);return KEY;}
[a-zA-Z0-9]+ {printf("identifier is %s\n",yytext);return ID;}
.;
%%
Yacc File
%{
#include <stdio.h>
#include <stdlib.h>
int id=0, dig=0, key=0, op=0;
%}
%token DIGIT ID KEY OP
%%
input:
DIGIT input { dig++; }
| ID input { id++; }
| KEY input { key++; }
| OP input {op++;}
| DIGIT { dig++; }
| ID { id++; }
| KEY { key++; }
| OP { op++;}
;
%%
#include <stdio.h>
extern int yylex();
extern int yyparse();
extern FILE *yyin;
main() {
FILE *myfile = fopen("sam_input.c", "r");
if (!myfile) {
printf("I can't open sam_input.c!");
return -1;
BLLDEACET/LM/CS/18CSL66
Page 22SYSTEM SOFTWARE LABARATORY. (18CSL66)
}
yyin = myfile;
do {
yyparse();
} while (!feof(yyin));
printf("numbers = %d\nKeywords = %d\nIdentifiers = %d\noperators = %d\n",
dig, key,id, op);
}
void yyerror() {
printf("EEK, parse error! Message: ");
exit(-1);
}
